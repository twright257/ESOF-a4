Save/Load Configuration
In order to save the game information, a folder for save files was added to the project and a new save button was added to the AdventureGameView class.  When this button is clicked, a separate window appears with a text box for entering the name of the saved game.  Clicking the “ok” button then creates a .txt file in the save folder with the name that was entered.  After creating the file, a method is called that gets the current location of the player, the difficulty level, items carried by the player and current health and then writes all of this information to the file with each piece of information separated by a new line.  

To load the file information, there is another window, activated by the “load” button, that displays all file names in the save folder and has a text box where the number of the file to load is entered.  Clicking the “ok” button then closes the load window, reads from the desired file and adds each line to an ArrayList slot.  This ArrayList is passed through the creation of the view, façade etc. and used to recreate the level of the game being loaded.  In the Adventure class, the former player location is set from the ArrayList information as well as adding items to player contents and removing them from rooms.  

Levels of Difficulty
To create an additional level of difficulty, a new room type was added as well as a player health level and first aid kits.  The new room type causes damage to the player when entered so that entering three of these rooms is enough to deplete the player’s health.  When the health bar reaches zero, the game ends and must either be restarted or reloaded.  To make it possible to complete the game, first aid kits were also added to several of the rooms.  When a first aid kit is picked up, they do not go into the player’s inventory as they are one time use but instead regenerate the player’s health to 100.  In order to complete the game, first aid kits must be found and used strategically.  

Implementation of the levels of difficulty was done using the abstract factory method.  A new abstract class Room and interface CaveFactory were created with Room implementing the CaveSite interface and the concrete CaveFactory0 and CaveFactory1 classes implementing CaveFactory.  The Adventure class, where all the rooms are linked together, is set up to create a variety of type 1 and type 2 rooms which are ultimately determined by what type of CaveFactory is created.  Depending on user input, either a CaveFactory0 or CaveFactory1 class will be created, each producing different types of type1 and type2 rooms.  If CaveFactory0 is created, type 1 and type 2 rooms will be the same but if CaveFactory1 is created, type 2 rooms will inflict player damage. 
 
Other Modifications and Notes 
Aside from the previously described modifications, there were only updates to the user interface to accommodate the new save and load configurations.  The most noticeable is a “Reset” button on the main view panel.  This button allows the user to restart at the opening screen and select a new difficulty or load a game.  The reset button will immediately exit the current game and should not be pushed if the user wants to return to their current game and has not already saved.  Also, closing any of the windows will cause the game to quit.  Other than these menu modifications, only minor back end changes were made to improve game functionality. 
